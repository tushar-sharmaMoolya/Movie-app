{"ast":null,"code":"// services/tmdbService.js\nimport axios from 'axios';\n\n// Replace with your TMDB API key from https://www.themoviedb.org/settings/api\nconst TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY || 'e5c7683dd4ac23c1a315f6d7824fd813';\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst tmdbApi = axios.create({\n  baseURL: TMDB_BASE_URL,\n  params: {\n    api_key: TMDB_API_KEY\n  }\n});\n\n/**\n * TMDB Service for movie data\n */\nexport const tmdbService = {\n  /**\n   * Get popular movies\n   */\n  getPopularMovies: (page = 1) => tmdbApi.get('/movie/popular', {\n    params: {\n      page\n    }\n  }).then(res => res.data),\n  /**\n   * Get now playing movies\n   */\n  getNowPlayingMovies: (page = 1) => tmdbApi.get('/movie/now_playing', {\n    params: {\n      page\n    }\n  }).then(res => res.data),\n  /**\n   * Get upcoming movies\n   */\n  getUpcomingMovies: (page = 1) => tmdbApi.get('/movie/upcoming', {\n    params: {\n      page\n    }\n  }).then(res => res.data),\n  /**\n   * Get top rated movies\n   */\n  getTopRatedMovies: (page = 1) => tmdbApi.get('/movie/top_rated', {\n    params: {\n      page\n    }\n  }).then(res => res.data),\n  /**\n   * Search movies by keyword\n   */\n  searchMovies: (query, page = 1) => tmdbApi.get('/search/movie', {\n    params: {\n      query,\n      page\n    }\n  }).then(res => res.data).catch(error => {\n    console.error('Search error:', error);\n    return {\n      results: [],\n      total_results: 0\n    };\n  }),\n  /**\n   * Get movie details\n   */\n  getMovieDetails: movieId => tmdbApi.get(`/movie/${movieId}`).then(res => res.data),\n  /**\n   * Get movie credits (cast and crew)\n   */\n  getMovieCredits: movieId => tmdbApi.get(`/movie/${movieId}/credits`).then(res => res.data),\n  /**\n   * Get movie videos (trailers, teasers)\n   */\n  getMovieVideos: movieId => tmdbApi.get(`/movie/${movieId}/videos`).then(res => res.data),\n  /**\n   * Get movie reviews\n   */\n  getMovieReviews: movieId => tmdbApi.get(`/movie/${movieId}/reviews`).then(res => res.data),\n  /**\n   * Get similar movies\n   */\n  getSimilarMovies: movieId => tmdbApi.get(`/movie/${movieId}/similar`).then(res => res.data),\n  /**\n   * Get image URL\n   */\n  getImageUrl: (path, size = 'w500') => `${IMAGE_BASE_URL}${path}`\n};\nexport default tmdbService;","map":{"version":3,"names":["axios","TMDB_API_KEY","process","env","REACT_APP_TMDB_API_KEY","TMDB_BASE_URL","IMAGE_BASE_URL","tmdbApi","create","baseURL","params","api_key","tmdbService","getPopularMovies","page","get","then","res","data","getNowPlayingMovies","getUpcomingMovies","getTopRatedMovies","searchMovies","query","catch","error","console","results","total_results","getMovieDetails","movieId","getMovieCredits","getMovieVideos","getMovieReviews","getSimilarMovies","getImageUrl","path","size"],"sources":["/Users/apple/Downloads/movie-streaming-app-v2-complete/movie-streaming-app/src/services/tmdbService.js"],"sourcesContent":["// services/tmdbService.js\nimport axios from 'axios';\n\n// Replace with your TMDB API key from https://www.themoviedb.org/settings/api\nconst TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY || 'e5c7683dd4ac23c1a315f6d7824fd813';\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst tmdbApi = axios.create({\n  baseURL: TMDB_BASE_URL,\n  params: {\n    api_key: TMDB_API_KEY,\n  },\n});\n\n/**\n * TMDB Service for movie data\n */\nexport const tmdbService = {\n  /**\n   * Get popular movies\n   */\n  getPopularMovies: (page = 1) =>\n    tmdbApi.get('/movie/popular', { params: { page } }).then((res) => res.data),\n\n  /**\n   * Get now playing movies\n   */\n  getNowPlayingMovies: (page = 1) =>\n    tmdbApi.get('/movie/now_playing', { params: { page } }).then((res) => res.data),\n\n  /**\n   * Get upcoming movies\n   */\n  getUpcomingMovies: (page = 1) =>\n    tmdbApi.get('/movie/upcoming', { params: { page } }).then((res) => res.data),\n\n  /**\n   * Get top rated movies\n   */\n  getTopRatedMovies: (page = 1) =>\n    tmdbApi.get('/movie/top_rated', { params: { page } }).then((res) => res.data),\n\n  /**\n   * Search movies by keyword\n   */\n  searchMovies: (query, page = 1) =>\n    tmdbApi\n      .get('/search/movie', { params: { query, page } })\n      .then((res) => res.data)\n      .catch((error) => {\n        console.error('Search error:', error);\n        return { results: [], total_results: 0 };\n      }),\n\n  /**\n   * Get movie details\n   */\n  getMovieDetails: (movieId) =>\n    tmdbApi.get(`/movie/${movieId}`).then((res) => res.data),\n\n  /**\n   * Get movie credits (cast and crew)\n   */\n  getMovieCredits: (movieId) =>\n    tmdbApi.get(`/movie/${movieId}/credits`).then((res) => res.data),\n\n  /**\n   * Get movie videos (trailers, teasers)\n   */\n  getMovieVideos: (movieId) =>\n    tmdbApi.get(`/movie/${movieId}/videos`).then((res) => res.data),\n\n  /**\n   * Get movie reviews\n   */\n  getMovieReviews: (movieId) =>\n    tmdbApi.get(`/movie/${movieId}/reviews`).then((res) => res.data),\n\n  /**\n   * Get similar movies\n   */\n  getSimilarMovies: (movieId) =>\n    tmdbApi.get(`/movie/${movieId}/similar`).then((res) => res.data),\n\n  /**\n   * Get image URL\n   */\n  getImageUrl: (path, size = 'w500') => `${IMAGE_BASE_URL}${path}`,\n};\n\nexport default tmdbService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}