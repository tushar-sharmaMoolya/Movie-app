{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/movie-streaming-app-v2-complete/movie-streaming-app/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/AuthContext.js\nimport React, { createContext, useCallback, useContext } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n/**\n * AuthProvider component that wraps the app and provides auth state\n */\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [users, setUsers] = useLocalStorage('users', []);\n  const [currentUser, setCurrentUser] = useLocalStorage('currentUser', null);\n  const [isAuthenticated, setIsAuthenticated] = useLocalStorage('isAuthenticated', false);\n\n  // Register a new user\n  const register = useCallback(userData => {\n    const existingUser = users.find(u => u.email === userData.email || userData.socialProvider && u.socialId === userData.socialId);\n    if (existingUser) {\n      throw new Error('User already exists');\n    }\n    const newUser = {\n      id: Date.now().toString(),\n      ...userData,\n      createdAt: new Date().toISOString()\n    };\n    setUsers([...users, newUser]);\n    return newUser;\n  }, [users, setUsers]);\n\n  // Login user\n  const login = useCallback((email, password, socialLogin = null) => {\n    let user;\n    if (socialLogin) {\n      user = users.find(u => u.socialId === socialLogin.socialId && u.socialProvider === socialLogin.provider);\n    } else {\n      alert('sss');\n      user = users.find(u => u.email === email && u.password === password);\n    }\n    if (!user) {\n      throw new Error('Invalid credentials');\n    }\n    const userToSet = {\n      ...user\n    };\n    delete userToSet.password; // Don't store password in current user\n    setCurrentUser(userToSet);\n    setIsAuthenticated(true);\n    return userToSet;\n  }, [users, setCurrentUser, setIsAuthenticated]);\n\n  // Logout user\n  const logout = useCallback(() => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  }, [setCurrentUser, setIsAuthenticated]);\n\n  // Check if email exists (for registration)\n  const emailExists = useCallback(email => {\n    return users.some(u => u.email === email);\n  }, [users]);\n  const value = {\n    currentUser,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    emailExists,\n    users\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n};\n\n/**\n * Custom hook to use auth context\n */\n_s(AuthProvider, \"hWQEC7mjf98sF1/8Zo8WuIQDD28=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useLocalStorage","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","users","setUsers","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","register","userData","existingUser","find","u","email","socialProvider","socialId","Error","newUser","id","Date","now","toString","createdAt","toISOString","login","password","socialLogin","user","provider","alert","userToSet","logout","emailExists","some","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/apple/Downloads/movie-streaming-app-v2-complete/movie-streaming-app/src/context/AuthContext.js"],"sourcesContent":["// context/AuthContext.js\nimport React, { createContext, useCallback, useContext } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\n\nconst AuthContext = createContext();\n\n/**\n * AuthProvider component that wraps the app and provides auth state\n */\nexport const AuthProvider = ({ children }) => {\n  const [users, setUsers] = useLocalStorage('users', []);\n  const [currentUser, setCurrentUser] = useLocalStorage('currentUser', null);\n  const [isAuthenticated, setIsAuthenticated] = useLocalStorage('isAuthenticated', false);\n\n  // Register a new user\n  const register = useCallback((userData) => {\n    const existingUser = users.find(\n      (u) => u.email === userData.email || (userData.socialProvider && u.socialId === userData.socialId)\n    );\n\n    if (existingUser) {\n      throw new Error('User already exists');\n    }\n\n    const newUser = {\n      id: Date.now().toString(),\n      ...userData,\n      createdAt: new Date().toISOString(),\n    };\n\n    setUsers([...users, newUser]);\n    return newUser;\n  }, [users, setUsers]);\n\n  // Login user\n  const login = useCallback((email, password, socialLogin = null) => {\n    let user;\n\n    if (socialLogin) {\n      user = users.find((u) => u.socialId === socialLogin.socialId && u.socialProvider === socialLogin.provider);\n    } else {\n      alert('sss')\n      user = users.find((u) => u.email === email && u.password === password);\n    }\n\n    if (!user) {\n      throw new Error('Invalid credentials');\n    }\n\n    const userToSet = { ...user };\n    delete userToSet.password; // Don't store password in current user\n    setCurrentUser(userToSet);\n    setIsAuthenticated(true);\n    return userToSet;\n  }, [users, setCurrentUser, setIsAuthenticated]);\n\n  // Logout user\n  const logout = useCallback(() => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  }, [setCurrentUser, setIsAuthenticated]);\n\n  // Check if email exists (for registration)\n  const emailExists = useCallback((email) => {\n    return users.some((u) => u.email === email);\n  }, [users]);\n\n  const value = {\n    currentUser,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    emailExists,\n    users,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n/**\n * Custom hook to use auth context\n */\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}