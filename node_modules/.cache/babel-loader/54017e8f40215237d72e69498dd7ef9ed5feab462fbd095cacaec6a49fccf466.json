{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/movie-streaming-app-v2-complete/movie-streaming-app/src/components/common/Button.tsx\";\n// components/common/Button.js\nimport React from \"react\";\nimport \"./Button.css\";\n\n/**\n * Reusable Button component\n * @param {string} variant - Button style variant: 'primary', 'secondary', 'danger', 'ghost'\n * @param {boolean} loading - Show loading state\n * @param {string} size - Button size: 'sm', 'md', 'lg'\n * @param {boolean} disabled - Disable button\n * @param {string} type - Button type: 'button', 'submit', 'reset'\n * @param {function} onClick - Click handler\n * @param {ReactNode} children - Button content\n * @param {string} className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  variant = \"primary\",\n  loading = false,\n  size = \"md\",\n  disabled = false,\n  type = \"button\",\n  onClick,\n  children,\n  className = \"\",\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    className: `btn btn-${variant} btn-${size} ${disabled || loading ? \"btn-disabled\" : \"\"} ${className}`,\n    disabled: disabled || loading,\n    onClick: onClick,\n    ...props,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"btn-loader\",\n      children: \"\\u23F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","variant","loading","size","disabled","type","onClick","children","className","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Downloads/movie-streaming-app-v2-complete/movie-streaming-app/src/components/common/Button.tsx"],"sourcesContent":["// components/common/Button.js\nimport React from \"react\";\nimport \"./Button.css\";\n\n/**\n * Reusable Button component\n * @param {string} variant - Button style variant: 'primary', 'secondary', 'danger', 'ghost'\n * @param {boolean} loading - Show loading state\n * @param {string} size - Button size: 'sm', 'md', 'lg'\n * @param {boolean} disabled - Disable button\n * @param {string} type - Button type: 'button', 'submit', 'reset'\n * @param {function} onClick - Click handler\n * @param {ReactNode} children - Button content\n * @param {string} className - Additional CSS classes\n */\nexport const Button = ({\n  variant = \"primary\",\n  loading = false,\n  size = \"md\",\n  disabled = false,\n  type = \"button\",\n  onClick,\n  children,\n  className = \"\",\n  ...props\n}) => {\n  return (\n    <button\n      type={type}\n      className={`btn btn-${variant} btn-${size} ${\n        disabled || loading ? \"btn-disabled\" : \"\"\n      } ${className}`}\n      disabled={disabled || loading}\n      onClick={onClick}\n      {...props}\n    >\n      {loading ? <span className=\"btn-loader\">‚è≥</span> : children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,SAAAC,MAAA,IAAAC,OAAA;AAWA,OAAO,MAAMC,MAAM,GAAGA,CAAC;EACrBC,OAAO,GAAG,SAAS;EACnBC,OAAO,GAAG,KAAK;EACfC,IAAI,GAAG,IAAI;EACXC,QAAQ,GAAG,KAAK;EAChBC,IAAI,GAAG,QAAQ;EACfC,OAAO;EACPC,QAAQ;EACRC,SAAS,GAAG,EAAE;EACd,GAAGC;AACL,CAAC,KAAK;EACJ,oBACEV,OAAA;IACEM,IAAI,EAAEA,IAAK;IACXG,SAAS,EAAE,WAAWP,OAAO,QAAQE,IAAI,IACvCC,QAAQ,IAAIF,OAAO,GAAG,cAAc,GAAG,EAAE,IACvCM,SAAS,EAAG;IAChBJ,QAAQ,EAAEA,QAAQ,IAAIF,OAAQ;IAC9BI,OAAO,EAAEA,OAAQ;IAAA,GACbG,KAAK;IAAAF,QAAA,EAERL,OAAO,gBAAGH,OAAA;MAAMS,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAAGN;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEb,CAAC;AAACC,EAAA,GAxBWd,MAAM;AA0BnB,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}