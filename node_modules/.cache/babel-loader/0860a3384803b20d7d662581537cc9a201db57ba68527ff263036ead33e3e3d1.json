{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/movie-streaming-app-v2-complete/movie-streaming-app/src/context/FavoritesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/FavoritesContext.js\nimport React, { createContext, useContext, useCallback } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext();\n\n/**\n * FavoritesProvider component that wraps the app and provides favorites state\n */\nexport const FavoritesProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [allFavorites, setAllFavorites] = useLocalStorage('favorites', {});\n\n  // Get current user's favorites\n  const getUserFavorites = useCallback(() => {\n    if (!currentUser) return [];\n    return allFavorites[currentUser.id] || [];\n  }, [currentUser, allFavorites]);\n\n  // Add movie to favorites\n  const addFavorite = useCallback(movie => {\n    if (!currentUser) return;\n    const userFavorites = allFavorites[currentUser.id] || [];\n    const exists = userFavorites.some(m => m.id === movie.id);\n    if (!exists) {\n      const updated = {\n        ...allFavorites,\n        [currentUser.id]: [...userFavorites, {\n          ...movie,\n          addedAt: new Date().toISOString()\n        }]\n      };\n      setAllFavorites(updated);\n    }\n  }, [currentUser, allFavorites, setAllFavorites]);\n\n  // Remove movie from favorites\n  const removeFavorite = useCallback(movieId => {\n    if (!currentUser) return;\n    const userFavorites = allFavorites[currentUser.id] || [];\n    const updated = {\n      ...allFavorites,\n      [currentUser.id]: userFavorites.filter(m => m.id !== movieId)\n    };\n    setAllFavorites(updated);\n  }, [currentUser, allFavorites, setAllFavorites]);\n\n  // Check if movie is in favorites\n  const isFavorite = useCallback(movieId => {\n    const favorites = getUserFavorites();\n    return favorites.some(m => m.id === movieId);\n  }, [getUserFavorites]);\n\n  // Clear all favorites for current user\n  const clearFavorites = useCallback(() => {\n    if (!currentUser) return;\n    const updated = {\n      ...allFavorites\n    };\n    delete updated[currentUser.id];\n    setAllFavorites(updated);\n  }, [currentUser, allFavorites, setAllFavorites]);\n  const value = {\n    favorites: getUserFavorites(),\n    addFavorite,\n    removeFavorite,\n    isFavorite,\n    clearFavorites\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n};\n\n/**\n * Custom hook to use favorites context\n */\n_s(FavoritesProvider, \"ItKHtzprhlWvU6Dg4I64+yNJKLs=\", false, function () {\n  return [useAuth, useLocalStorage];\n});\n_c = FavoritesProvider;\nexport const useFavorites = () => {\n  _s2();\n  const context = useContext(FavoritesContext);\n  if (!context) {\n    throw new Error('useFavorites must be used within FavoritesProvider');\n  }\n  return context;\n};\n_s2(useFavorites, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FavoritesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useCallback","useLocalStorage","useAuth","jsxDEV","_jsxDEV","FavoritesContext","FavoritesProvider","children","_s","currentUser","allFavorites","setAllFavorites","getUserFavorites","id","addFavorite","movie","userFavorites","exists","some","m","updated","addedAt","Date","toISOString","removeFavorite","movieId","filter","isFavorite","favorites","clearFavorites","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavorites","_s2","context","Error","$RefreshReg$"],"sources":["/Users/apple/Downloads/movie-streaming-app-v2-complete/movie-streaming-app/src/context/FavoritesContext.js"],"sourcesContent":["// context/FavoritesContext.js\nimport React, { createContext, useContext, useCallback } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { useAuth } from './AuthContext';\n\nconst FavoritesContext = createContext();\n\n/**\n * FavoritesProvider component that wraps the app and provides favorites state\n */\nexport const FavoritesProvider = ({ children }) => {\n  const { currentUser } = useAuth();\n  const [allFavorites, setAllFavorites] = useLocalStorage('favorites', {});\n\n  // Get current user's favorites\n  const getUserFavorites = useCallback(() => {\n    if (!currentUser) return [];\n    return allFavorites[currentUser.id] || [];\n  }, [currentUser, allFavorites]);\n\n  // Add movie to favorites\n  const addFavorite = useCallback((movie) => {\n    if (!currentUser) return;\n\n    const userFavorites = allFavorites[currentUser.id] || [];\n    const exists = userFavorites.some((m) => m.id === movie.id);\n\n    if (!exists) {\n      const updated = {\n        ...allFavorites,\n        [currentUser.id]: [...userFavorites, { ...movie, addedAt: new Date().toISOString() }],\n      };\n      setAllFavorites(updated);\n    }\n  }, [currentUser, allFavorites, setAllFavorites]);\n\n  // Remove movie from favorites\n  const removeFavorite = useCallback((movieId) => {\n    if (!currentUser) return;\n\n    const userFavorites = allFavorites[currentUser.id] || [];\n    const updated = {\n      ...allFavorites,\n      [currentUser.id]: userFavorites.filter((m) => m.id !== movieId),\n    };\n    setAllFavorites(updated);\n  }, [currentUser, allFavorites, setAllFavorites]);\n\n  // Check if movie is in favorites\n  const isFavorite = useCallback((movieId) => {\n    const favorites = getUserFavorites();\n    return favorites.some((m) => m.id === movieId);\n  }, [getUserFavorites]);\n\n  // Clear all favorites for current user\n  const clearFavorites = useCallback(() => {\n    if (!currentUser) return;\n    const updated = { ...allFavorites };\n    delete updated[currentUser.id];\n    setAllFavorites(updated);\n  }, [currentUser, allFavorites, setAllFavorites]);\n\n  const value = {\n    favorites: getUserFavorites(),\n    addFavorite,\n    removeFavorite,\n    isFavorite,\n    clearFavorites,\n  };\n\n  return <FavoritesContext.Provider value={value}>{children}</FavoritesContext.Provider>;\n};\n\n/**\n * Custom hook to use favorites context\n */\nexport const useFavorites = () => {\n  const context = useContext(FavoritesContext);\n  if (!context) {\n    throw new Error('useFavorites must be used within FavoritesProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}